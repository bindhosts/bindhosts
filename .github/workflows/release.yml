name: Release

on:
  push:
    branches:
      - master
    paths:
      - '.github/workflows/release.yml'
      - 'module/**'
      - 'webui/**'
      - 'update.json'
  workflow_dispatch:
    inputs:
      force_release:
        description: 'Force change release file?'
        required: true
        type: boolean
        default: false

env:
  MODULE_NAME: 'bindhosts'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v5
      with:
        fetch-depth: 2

    - name: build webroot
      run: |
        cd webui
        npm ci
        npm run build

    - name: Set variables
      id: setup
      run: |
        MODULE_DESC="Systemless hosts for APatch, KernelSU and Magisk."
        CURRENT_VERSION_CODE=$(jq -r .versionCode update.json)
        PREVIOUS_VERSION_CODE=$(jq -r .versionCode <(git show HEAD~1:update.json))
        COMMIT_ID=$(git rev-parse --short HEAD)
        echo "ZIP_NAME=${{ env.MODULE_NAME }}_${CURRENT_VERSION_CODE}-${COMMIT_ID}" >> $GITHUB_ENV
        echo "VERSION=$(jq -r .version update.json)" >> $GITHUB_ENV
        CHANGELOG_RAW=$(git diff HEAD^ HEAD -- "CHANGELOG.md" | grep '^+[^+]' | sed 's/^+//')
        {
          echo "CHANGELOG<<EOF"
          echo -e "## ${{ env.MODULE_NAME }}\n${MODULE_DESC}\n\n---\n\n# Changelog:\n${CHANGELOG_RAW}"
          echo "EOF"
        } >> $GITHUB_ENV
        
        if [ "$CURRENT_VERSION_CODE" -gt "$PREVIOUS_VERSION_CODE" ]; then
          echo "version_changed=true" >> $GITHUB_ENV
        else
          echo "version_changed=false" >> $GITHUB_ENV
        fi

    - name: Upload artifact
      uses: actions/upload-artifact@v5
      with:
        name: ${{ env.ZIP_NAME }}
        path: 'module'

    - name: Download artifact
      if: ${{ env.version_changed == 'true' || inputs.force_release }}
      uses: actions/download-artifact@v5
      with:
        name: ${{ env.ZIP_NAME }}
        path: ${{ env.MODULE_NAME }}

    - name: Zip module for release
      if: ${{ env.version_changed == 'true' || inputs.force_release }}
      run: |
        cd ${{ env.MODULE_NAME }}
        zip -r ../${{ env.MODULE_NAME }}.zip .
        cd ..

    - name: Create new release
      if: ${{ env.version_changed == 'true' }}
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: "${{ env.MODULE_NAME }}.zip"
        tag_name: "${{ env.VERSION }}"
        name: "Release ${{ env.VERSION }}"
        body: "${{ env.CHANGELOG }}"
        draft: false
        prerelease: false

    - name: Force update latest release file
      if: ${{ inputs.force_release }}
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: "${{ env.MODULE_NAME }}.zip"
        tag_name: "${{ env.VERSION }}"
        name: "Release ${{ env.VERSION }}"
